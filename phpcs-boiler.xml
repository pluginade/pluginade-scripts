<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="PluginSlug" xsi:noNamespaceSchemaLocation="vendor/squizlabs/php_codesniffer/phpcs.xsd">
	<description>Custom ruleset for PluginSlug plugin.</description>

	<!-- For help in understanding this file: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<!-- For help in using PHPCS: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage -->

	<!-- What to scan -->
	<file>.</file>
	<!-- Ignoring Files and Folders:
		https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#ignoring-files-and-folders -->
	<exclude-pattern>./node_modules/</exclude-pattern>
	<exclude-pattern>./vendor/</exclude-pattern>
	<exclude-pattern>./build/</exclude-pattern>

	<!-- Do not require docblocks for unit tests -->
	<rule ref="Squiz.Commenting.FunctionComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment.SpacingAfter">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Generic.Commenting.DocComment.Empty">
    	<exclude-pattern>tests/*</exclude-pattern>
    </rule>
	<rule ref="Generic.Commenting.DocComment.MissingShort">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.VariableComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FunctionCommentThrowTag.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>

	<!-- How to scan -->
	<!-- Show sniff and progress -->
	<arg value="sp"/>
	<!-- Show results with colors -->
	<arg name="colors"/>
	<!-- Strip the file paths down to the relevant bit -->
	<arg name="basepath" value="."/>
	<!-- Enables parallel processing when available for faster results. -->
	<arg name="parallel" value="20"/>
	<!-- Limit to PHP files -->
	<arg name="extensions" value="php"/>

	<!-- Rules: Check PHP version compatibility - see
		https://github.com/PHPCompatibility/PHPCompatibilityWP -->
	<rule ref="PHPCompatibilityWP"/>
	<!-- For help in understanding this testVersion:
		https://github.com/PHPCompatibility/PHPCompatibility#sniffing-your-code-for-compatibility-with-specific-php-versions -->
	<config name="testVersion" value="7.4-"/>
	<config name="text_domain" value="madewithpluginade"/>
	<config name="prefixes" value="MadeWithPLUGINADE"/>

	<!-- Rules: WordPress Coding Standards - see
		https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->
	<!-- WordPress-Extra includes WordPress-Core -->
	<rule ref="WordPress-Extra"/>
	<rule ref="WordPress-Docs"/>
	<!-- For help in understanding these custom sniff properties:
		https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties -->
	<config name="minimum_supported_wp_version" value="5.3"/>

	<rule ref="WordPress.Files.FileName">
		<properties>
			<property name="strict_class_file_names" value="false"/>
		</properties>
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
	</rule>

	<rule ref="WordPress.NamingConventions.PrefixAllGlobals"/>

	<rule ref="WordPress.WP.I18n"/>

	<rule ref="WordPress.Utils.I18nTextDomainFixer">
		<properties>
			<property name="old_text_domain" type="array" value="ignore" />
			<property name="new_text_domain" value="madewithpluginade" />
		</properties>
	</rule>

	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>

	<rule ref="WordPress">
		<exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
		<exclude name="Universal.Arrays.DisallowShortArraySyntax"/>
	</rule>

</ruleset>
